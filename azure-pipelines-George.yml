# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

# variables:
#   - group: 'NGT-Metadefender'
#   - group: 'ABB NextGen Engg'

variables:
- name: one
  value: false 
- name: testdiffs

resources:
  containers:
    - container: ubuntu
      image: ubuntu:18.04

stages:
  - stage: S1

    jobs: 
    - job: J1
      pool:
        vmimage: 'windows-latest'
      #container: ubuntu
      steps:
      - checkout: none
      - script: |
          echo ${{ variables.one }} # outputs initialValue
          echo $(one)
        displayName: First variable pass
      - bash: echo '##vso[task.setvariable variable=one]true'
        displayName: Set new variable value
      - script: |
          echo ${{ variables.one }} # outputs initialValue
          echo $(one) # outputs secondValue
        displayName: Second variable pass
      - bash: |
          echo "##vso[task.setvariable variable=testdiffs;isOutput=true]$(one)"
        name: SetVariable
      - bash: | 
          echo "testdiffs: $(SetVariable.testdiffs)"
        name: GetVariable



    - job: J2
      dependsOn: J1
      variables:
        testdiffs: $[ dependencies.J1.outputs['SetVariable.testdiffs'] ]
      pool:
        vmimage: 'windows-latest'
      #container: ubuntu
      steps:
      - checkout: none
      - bash: |
          echo "testdiffs: $(testdiffs)"
        condition: eq(variables.testdiffs, true)

  - stage: deploy
    condition: and(succeeded(), eq(dependencies.S1.outputs['J1.SetVariable.testdiffs'], true))
    dependsOn: S1

    jobs:
    - deployment: Deploy
      pool:
        vmimage: 'ubuntu-latest'
      #container: ubuntu
      environment: 'test'
      strategy:
        runOnce:
          deploy:
            steps:
            - bash: |
                echo "Deploying...."
